trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: 'Release'  
  NugetVersion: $(GitVersion.NuGetVersionV2)
  ArtifactName: 'Nuget Packages'

stages:
  - stage: Stage
    displayName: Build and pack
    jobs:
    - job: job
      steps:
      - checkout: self
        submodules: recursive
      
      - task: gitversion/setup@0
        inputs:
         versionSpec: '5.x'
      
      - task: gitversion/execute@0
      
      - task: CmdLine@2
        displayName: 'Show version of Nuget Packages'
        inputs: 
          script: 'echo $(GitVersion.NuGetVersionV2)'

      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '6.0.x'

      - task: DotNetCoreCLI@2
        displayName: 'Pack projects'
        inputs:
          command: 'pack'
          packagesToPack: '**/*.csproj;!**/*.Tests.csproj'
          versioningScheme: 'byEnvVar'
          versionEnvVar: 'GitVersion.NuGetVersionV2'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish artifacts'
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)'
          ArtifactName: $(ArtifactName)
          publishLocation: 'Container'

  - stage: Release
    condition: succeeded()
    jobs:
    - job: Publish_NuGet_External      
      steps:        
      - checkout: none

      - task: DownloadBuildArtifacts@0
        displayName: 'Download artifacts'
        inputs:
          buildType: current
          downloadType: single
          artifactName: $(ArtifactName)

      - task: NuGetCommand@2
        displayName: Publish packages
        inputs:
          command: 'push'
          packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
          nuGetFeedType: 'external'
          publishFeedCredentials: 'Nuget'